{\rtf1\ansi\deff0\adeflang1025
{\fonttbl{\f0\froman\fprq2\fcharset0 Times New Roman;}{\f1\froman\fprq2\fcharset0 Times New Roman;}{\f2\froman\fprq2\fcharset0 Times New Roman;}{\f3\fnil\fprq0\fcharset2 StarSymbol{\*\falt Arial Unicode MS};}{\f4\fnil\fprq0\fcharset2 Symbol;}{\f5\fnil\fprq2\fcharset0 Arial Unicode MS;}{\f6\fswiss\fprq0\fcharset0 Arial;}{\f7\fnil\fprq2\fcharset0 Tahoma;}}
{\colortbl;\red0\green0\blue0;\red0\green0\blue128;\red0\green0\blue255;\red0\green128\blue0;\red128\green128\blue128;}
{\stylesheet{\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255\snext1 Normal;}
{\*\cs3\cf1\rtlch\af3\afs18\lang255\ltrch\dbch\af3\langfe255\hich\f3\fs18\lang255\loch\f3\fs18\lang255 Bullet Symbols;}
{\*\cs4\cf2\ul\ulc0\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 Internet link;}
{\*\cs5\cf1\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f4\fs24\lang255\loch\f4\fs24\lang255 RTF_Num 2 1;}
}{\*\listtable{\list\listtemplateid1
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li720}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9675 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li1080}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9632 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li1440}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li1800}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9675 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li2160}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9632 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li2520}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li2880}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9675 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li3240}
{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9632 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li3600}
{\*\soutlvl{\listlevel\levelnfc23\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u9679 ?;}{\levelnumbers;}\f3\fs18\f3\fs18\f3\fs18\f3\fi-360\li3960}}\listid1}
{\list\listtemplateid2\listsimple
{\listlevel\levelnfc0\leveljc0\levelstartat1\levelfollow0{\leveltext \'01\u183\'45;}{\levelnumbers;}\f4\fi0\li0}{\listname RTF_Num 2;}\listid2}
}{\listoverridetable{\listoverride\listid1\listoverridecount0\ls0}{\listoverride\listid2\listoverridecount0\ls1}}

{\info{\creatim\yr2007\mo2\dy7\hr13\min38}{\author laurent lessieux}{\revtim\yr2007\mo3\dy30\hr18\min21}{\printim\yr1601\mo1\dy1\hr0\min0}{\comment StarWriter}{\vern6800}}\deftab1134
{\*\pgdsctbl
{\pgdsc0\pgdscuse195\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\pgdscnxt0 Standard;}}
\paperh16837\paperw11905\margl1134\margr1134\margt1134\margb1134\sectd\sbknone\pgwsxn11905\pghsxn16837\marglsxn1134\margrsxn1134\margtsxn1134\margbsxn1134\ftnbj\ftnstart1\ftnrstcont\ftnnar\aenddoc\aftnrstcont\aftnstart1\aftnnrlc
\pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ab\ltrch\dbch\af6\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b RCB3Interface Library 1.0.4}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b (c) Laurent Lessieux}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ab\ltrch\dbch\af6\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Notice }
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Use this library at your own risk. There is no guarantee this software would work at all in your system or your robot.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Your robot might be damaged. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ab\ltrch\dbch\af6\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Introduction}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This is a library for controlling the RCB3 boards using the serial link from a PC under Windows.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The library is implemented in C in DLL form, RCB3_Interface.dll, so it can be used from almost any other language.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The library exports all functions documented by Kondo RCB3 Command Reference Manual.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The H file for C and C++ programers, RCB3_Interface.h, is included. It contains all necessary prototypes and constants to use the functions in the library.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The VB.NET and C# wrappers are also provided but not tested so far. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The LIB file necessary for linking is also provided with the name RCB3_Interface.lib.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This is a Low Level Library and as such each exported function map to one command of the protocol only.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Please refer to your Robot Software manual and RCB3 Command Reference Manual in order to understand concepts like position, motion, scenario, etc. An understanding of these concepts is necessary to use this library.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The DLL has been built using static lib in order to avoid any references to external DLL (except Kernel32.DLL).}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ab\ltrch\dbch\af6\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Quick Summary of the RCB3 Board}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The RCB3 board is able to control 24 servos and has 3 Analog to Digital converters that can be used.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It is also able to report the power supply voltage.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It has a bank of 5 scenarios and a bank of 80 motions.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Each scenario can have up to 200 motions.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Each motion can normally have \'93up to 30\'94 slots. However you can overwrite the following motion's slots and therefore make longer motions.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 All AD are 0 to 5V channels. The Power Supply off course goes higher since it's a 10.8V one.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The main connection is with the PC is done via the High Speed (115200bps) RC232 serial interface.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The RCB3 is also equipped with a second serial interface (2400bps) for the KRR1 remote control or other usages.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 From the remote control, the RCB3 is able to receive buttons information as well as other things not documented here.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Each motion or scenario can have an associated buttons combination to start it. Don't ask me what's happening if you have multiple motions with the same buttons; it's probably taking the first one but I have not checked.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The RCB3 is also able to send notification every 0.5s for some data (ports running, AD values, remote control data), when enable you must poll the interface regularly to get the values.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Even if you don't the value will be stored into an internal buffer representing the last received data.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 I won't go into details about Mixing and other exotic things here, it's outside the scope of this document.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ab\ltrch\dbch\af5\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Interface and Call protocol}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 I have decided to take a very secure approach for this DLL, so every call will return a boolean to indicate the succes or failure of the call.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 If a failure occurs you can get an error value from {\lang255{\b GetLastRCB3Error()}}{\lang255 . You can also retreive a string associated with that specific error by using {\b GetLastRCB3ErrorName(error value)}, but normally you are really interested in the full error message which ca
n be obtained by {\b GetLastRCB3FullErrorMessage()}.}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 For each call the following checks are done:}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Valid RCB3Interface passed}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Valid range for the input values}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Memory allocation failure (only necessary during the creation)}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 NULL Pointer passed. (only 2 exceptions)}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Read/Write to input and output values passed by pointers are all protected via a try..catch block to ensure the validity of the pointer.}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Valid Model for this call}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi-360\fs20\fs20\fs20\f3\fs18\f3\fs18\f3\fs18 \u9679\'3f\tab}\ilvl0 \ltrpar\s1\cf1\ls0\aspalpha\li720\ri0\lin720\rin0\fi-360\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 valid checksum received from the RCB3}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It is possible that some of my ranges check are incorrect so please don't hesitate to report any problem you think is range related.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 In order to make it even clearer, I have prefixed the variable names with in_ or out_ to indicate which direction that goes.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ab\ltrch\dbch\af5\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b How to use it}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 In order to access your robot using this library you must follow the next sequence:}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Create an RCB3 interface }
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 send command}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 check boolean for succes.}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Send as many commands as you want}
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain {\listtext\pard\plain \li720\ri0\lin720\rin0\fi0\fs20\f6\fs20\f6\fs20\f4 \tab}\ilvl0 \ltrpar\s1\cf1\ls1\li720\ri0\lin720\rin0\fi0\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Destroy the RCB3 Interface}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Since you need to specify the port, in theory you should be able to control more than one robot within the same program.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It is probably better to create the interface once and to keep it until you are done with it.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 On creation, the interface will send a version request to the RCB3, if that fails then the creation will fail too.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Com ports can take any value, as long as it's working with HTH, it should be fine with the dll.}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Internally the code will retry 3 times to get the acknoledgement from the RCB3 before sending the command, failure to answer within that time would result in a failure of the call.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ab\ltrch\dbch\af5\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Functions Details}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf0\ul\ulc0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Error Reporting:}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT {\b GetLastRCB3Error}();}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 return the last error that occurred.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 char}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0 * {\b GetLastRCB3ErrorName}(UINT error);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 return a string with the describtion of the type of error.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 char}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0 * {\b GetLastRCB3FullErrorMessage}();}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 return a string with detailled information about what failed.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ul\ulc0\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Creation/Destruction of the Interface:}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b CreateRCB3Interface}(}{\cf3 int}{\cf0  in_comPort,}{\cf3 int}{\cf0  in_comSpeed,}{\cf3 int}{\cf0  in_model,UINT &out_rcb3Interface);}}
\par \pard\plain \ltrpar\s1\cf0\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 First function that should be called to create an interface for the desired port. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The comSpeed should always be 115200.}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0 The model should be one of the two currently supported (}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0  RCB3_MODEL_NORMAL or RCB3_MODEL_J).}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The out_rcb3Interface is the handle that will describe your new interface. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 From now on, this number will be passed to all functions.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This function will try to open the COM port and communicate with the RCB3 to see if it is connected.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 If  the creation failed, take a look at the Error message to see what went wrong.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf0\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0  {\b CreateRCB3InterfaceSkipCheck}({\cf3 int} in_comPort,{\cf3 int} in_comSpeed,{\cf3 int} in_model,UINT &out_rcb3Interface);}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Same as above but it will skip all the checks. That might allows you to send data to any intermediate module you might have.}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang255\loch\f0\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang255\loch\f0\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  {\b CreateRCB3InterfaceViaBlueSmirf}(}{\cf3 int}{\cf0  in_comPort,}{\cf3 int}{\cf0  in_comSpeed,}{\cf3 int}{\cf0  in_rcbmodel,}{\cf3 int}{\cf0  in_autodetectSpeed,}{\cf3 int}{\cf0  in_writeGoodConfigToFlash,}{\cf3 int}{\cf0  in_skipCheck,UINT &out_rcb3Interface);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang255\loch\f0\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Tentative code to interface with the BlueSmirf. It seems to work but I have too many errors with my interface to make it effective.}
\par \pard\plain \ltrpar\s1\cf0\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b DestroyRCB3Interface}(UINT in_rcb3Interface);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Delete the previously created interface and close the COM port.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf0\ul\ulc0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Utilities:}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //value of 0 or 1 for each. Usage depends on command too.}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT {\b RCB3MakeOption}(UINT storeToEeprom,UINT forceMotion); }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Construct the option value that needs to be passed to most of the functions.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The forceMotion is rarely used.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b MakeMotionScenarioIndex}(UINT &out_motionScenarioIndex,}{\cf3 int}{\cf0  motion = -1, }{\cf3 int}{\cf0  scenario = -1)}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Some of the functions take a motionScenarioIndex, which represent either a motion or a scenario.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Motion are stored between 0 and 79 and scenario between 80 and 84.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This function is just a sum most of the time, but  it could be usefull.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 /////////////////////////}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang255\loch\f0\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Serial  Extension}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 /////////////////////////}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255\fs20{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255\fs20{\cf0  {\b SendBytesToCOMPort}(UINT in_rcb3,}{\cf3 const}{\cf0  }{\cf3 char}{\cf0  *in_buffer,UINT in_buffer_size);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255\fs20{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255\fs20{\cf0  {\b ReceiveBytesFromCOMPort}(UINT in_rcb3,}{\cf3 char}{\cf0  *out_buffer,UINT in_buffer_size);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang255\loch\f0\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 These 2 functions allow you to communicate directly via the com port open for the interface.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 That way you can extend the code as you want or dialog with a BlueTooth or Wifi Module if you have one connected.}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf0\ul\ulc0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Low Level Functions:}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Software Switches:}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetRCB3SoftwareSwitch}(UINT in_rcb3,UINT in_SWITCH,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This function enables/disables quite a few things and can be written in ROM for default usage. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 So here is the description of what in_SWITCH represents.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 0: Sleep Mode, I have no idea what it does exactly and I have not tried it yet. However it's meaningless when writing to ROM}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 1: Suspension of the mouvement interpolation (No meaning when storing to ROM)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 2: Periodic notification of data from RemoteControl. (0=OFF, 1=ON) (No meaning when storing to ROM)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 3: Low Speed Serial Interface Mode: 0 = extended RCB3 protocol, 1=low speed serial KRC1, RCB1}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 4: 0}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 5-6-7: \'93setup cycle\'94 from 0=15ms to 7=32.5ms by 2.5ms steps (No meaning for Type J board)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 8: Periodic notification of Analog inputs data (0=OFF, 1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 9: Periodic notification of motion data termination (0=OFF,1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 10: Motion playback on Low Power (0=OFF,1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 11:Motion Playback on Powe On (0=OFF,1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 12:Motion playback on reset switch pressed (0=OFF,1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 13:Control from remoteControl (0=OFF,1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 14:ICS Mode (0=OFF,1=ON)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 15: 0}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 16 to 31:0}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetRCB3SoftwareSwitch}(UINT in_rcb3,UINT &out_SWITCH,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Retreive the value explained in the precedent function.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Motion/Scenario Playback}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b PlayMotion}(UINT in_rcb3,UINT in_motionIndex,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b PlayScenario}(UINT in_rcb3,UINT in_scenarioIndex,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 These two functions use the same low level command but I decided to create 2 functions for clarity purpose.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 MotionIndex should be between 0 and 79}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 ScenarioIndex should be between 0 and 4}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Interruption of port motion (one bit set per port to stop)}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b StopPorts}(UINT in_rcb3,UINT in_portsToStop);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Stops the current motion for all ports with a bit set to 1.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Bit 0-23 are only valid here.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Set Port Speed and Position}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortSpeedAndPosition}(UINT in_rcb3,UINT in_portIndex,UINT in_speed,UINT in_position,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Set the position and speed for that port. That's what is used in HTH when changing the position with Sync on.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 PortIndex between 0-23}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Speed between 1-255 (0 is forbidden)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Position : well a 16bit value with a lot of meanings. See RCB3 Command Reference Manual.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortsSpeedAndPosition}(UINT in_rcb3,UINT in_motionIndex,UINT in_slotIndex,UINT in_speed,}{\cf3 const}{\cf0  UINT *in_position }{\cf4 /*24*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Same as above but for a slot in a motion.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPortsSpeedAndPosition}(UINT in_rcb3,UINT in_option,UINT in_motionIndex,UINT in_slotIndex,UINT &out_speed,UINT *out_position}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Reads the speed and position for that slot in the motion.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortHomePosition}(UINT in_rcb3,UINT in_portIndex,UINT in_homePosition,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortsHomePosition}(UINT in_rcb3,}{\cf3 const}{\cf0  UINT *in_homePositions}{\cf4 /*24*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPortsHomePosition}(UINT in_rcb3,UINT *out_homePositions}{\cf4 /*24*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Does what's in the name...}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Teaching}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetTeachedPosition}(UINT in_rcb3,UINT *out_positions}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It will probably return the position of each servos but I don't know what happen if you have not placed them in teaching mode before.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Scenario Edition}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetMotionInScenario}(UINT in_rcb3,UINT in_scenarioIndex,UINT in_slotIndex,UINT in_motionIndex,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Write the motion index (0-79) into one of the possible slots (0-199) for the specified scenario (0-4)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  {\b GetMotionInScenario}(UINT in_rcb3,UINT in_scenarioIndex,UINT in_slotIndex,UINT &out_motionIndex);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 retreive the value from the scenario from that slot.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Start switch/Power on Motion/Scenario}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetStartupMotion}(UINT in_rcb3,UINT in_motionScenarioIndexSwitchPressed,UINT in_motionScenarioIndexPowerOn,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 When the switch has been set for these, you need to write which motion or scenario will be played in these cases.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetStartupMotion}(UINT in_rcb3,UINT &out_motionScenarioIndexSwitchPressed,UINT &out_motionScenarioIndexPowerOn);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 See above.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Low Power Configuration (in V)}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetLowPowerThresholdAndMotion}(UINT in_rcb3,}{\cf3 float}{\cf0  in_lowPower,UINT in_motionScenarioIndex,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Same as above but for the Low Power case.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetLowPowerThresholdAndMotion}(UINT in_rcb3,}{\cf3 float}{\cf0  &out_lowPower,UINT &out_motionScenarioIndex);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 See above}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //RCB3 version (last byte will always be zero}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetRCBVersion}(UINT in_rcb3,}{\cf3 char}{\cf0  *out_version }{\cf4 /*65*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Returns a string containing the version name and number. The string is normally 64 bytes but I extended it by one to make sure that I can store the 0 at the end.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Analog Input }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //outputs/inputs (In V)}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetAnalogInputs}(UINT in_rcb3,}{\cf3 float}{\cf0  &out_power,}{\cf3 float}{\cf0  &out_ad1,}{\cf3 float}{\cf0  &out_ad2,}{\cf3 float}{\cf0  &out_ad3);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Retreives the measure values in V for the 3 AD channels and the power supply.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Channel = 0,1 or 2}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Set to -1V for automatic detection but should not be done with ROM option}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetAnalogBaseValue}(UINT in_rcb3,UINT in_channel,}{\cf3 float}{\cf0  in_baseValue,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetAnalogBaseValues}(UINT in_rcb3,}{\cf3 const}{\cf0  }{\cf3 float}{\cf0  *in_baseValue }{\cf4 /*3*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetAnalogBaseValues}(UINT in_rcb3,}{\cf3 float}{\cf0  *out_baseValue }{\cf4 /*3*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Set/Get the base value, when you want to use the automatic detection then you must not use the ROM option and you must pass -1.0f to enable it.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //RealTime Mixing}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetRealTimeMixing}(UINT in_rcb3,UINT in_channel,}{\cf3 const}{\cf0  UINT *in_mixingFactors}{\cf4 /*24*/}{\cf0 ,}{\cf3 const}{\cf0  UINT *in_reverseFactor}{\cf4 /*24*/}{\cf0 ,}{\cf3 const}{\cf0  UINT *in_set}{\cf4 /*24*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetRealTimeMixing}(UINT in_rcb3,UINT in_channel,UINT *out_mixingFactors}{\cf4 /*24*/}{\cf0 ,UINT *out_reverseFactor}{\cf4 /*24*/}{\cf0 ,UINT *out_set}{\cf4 /*24*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Configuration of the Realtime Mixing. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The valid channels are 0-2.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The mixing factor should be between 0-63}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The reverseFactor should be 0 or 1: 0 for multiply by 1, 1 for multiply by -1}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 in_set should be 1 to enable the realtime mixing.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Configuration of Motion playback on AD Deltas.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //0 or 1 to enable or disable motion playback}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetMotionPlaybackforAD}(UINT in_rcb3,}{\cf3 const}{\cf0  UINT *in_motionScenarioIndices}{\cf4 /*6*/}{\cf0 ,}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\rtlch \ltrch\loch\cf0                                                     }}{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 const}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  UINT *in_levels}{\cf4 /*6*/}{\cf0 ,}}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\rtlch \ltrch\loch\cf0                                                     }}{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 const}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  UINT *in_reverse}{\cf4 /*6*/}{\cf0 ,}}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\rtlch \ltrch\loch\cf0                                                     }}{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 const}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  UINT *in_mixingSwitch}{\cf4 /*6*/}{\cf0 ,}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                                     }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_option);}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetMotionPlaybackforAD}(UINT in_rcb3,UINT in_option,}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\cf0{\rtlch \ltrch\loch                                        }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT *out_motionScenarioIndices}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf4 /*6*/}{\cf0 ,}}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\cf0{\rtlch \ltrch\loch                                        }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT *out_levels}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf4 /*6*/}{\cf0 ,}}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\cf0{\rtlch \ltrch\loch                                        }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT *out_reverse}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf4 /*6*/}{\cf0 ,}}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\cf0{\rtlch \ltrch\loch                                        }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT *out_mixingSwitch}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf4 /*6*/}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                        }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 );}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Enable you to activate motions automatically once a threshold has been reached for the specified AD channel.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 I have no experience with that so I can't tell much more.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Remote Control}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetDataFromRemoteControl}(UINT in_rcb3,}{\cf3 char}{\cf0  *out_remoteControl}{\cf4 /*7*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetDataFromRemoveControlOverwrite}(UINT in_rcb3,UINT in_option,UINT in_button,}{\cf3 const}{\cf0  UINT *in_analogChannel}{\cf4 /*4*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Retreives or Overwrites the data from the remoteControl.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 You will have to dig a bit in the manual for more information. But it seems that you can overwrite the button that is being pressed  as well as 4 possible other values.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Serial Extension}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetSerialExtensionAnalogBaseValues}(UINT in_rcb3,}{\cf3 const}{\cf0  UBYTE *in_baseValue}{\cf4 /*4*/}{\cf0 ,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetSerialExtensionAnalogBaseValues}(UINT in_rcb3,UINT in_option,UBYTE *out_baseValue}{\cf4 /*4*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It seems that via the extended serial protocol, one could get 4 more AD channels but on a 8bit range only.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This call would set the base value for them.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //ICS Mode}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //1 bit per port}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortsInICSMode}(UINT in_rcb3,UINT in_portsInICS,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPortsInICSMode}(UINT in_rcb3,UINT &out_portsInICS);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Set a port in ICS Mode.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //RedVersion Port configuration}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetRedVersionConfiguration}(UINT in_rcb3,UINT in_portNumber,UBYTE in_backup,}{\cf3 const}{\cf0  UBYTE *in_stretch}{\cf4 /*3*/}{\cf0 ,}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\rtlch \ltrch\loch\cf0                                            }}{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 const}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  UBYTE *in_speed}{\cf4 /*3*/}{\cf0 ,UINT in_pulsePunch,UINT in_deadBand,UINT in_damping,}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_protectionTime, UINT in_reverse, }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_lowerPositionLimit,UINT in_upperPositionLimit,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_freeTime);}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetRedVersionConfiguration}(UINT in_rcb3,UINT in_portNumber,UBYTE &out_backup,UBYTE *out_stretch}{\cf4 /*3*/}{\cf0 ,}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\cf0{\rtlch \ltrch\loch                                            }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UBYTE *out_speed}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf4 /*3*/}{\cf0 ,UINT &out_pulsePunch,UINT &out_deadBand,UINT &out_damping,}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_protectionTime, UINT &out_reverse, }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_lowerPositionLimit,UINT &out_upperPositionLimit,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_freeTime);}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Configuration of the RedVersion Servos.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Don't ask me, I have no idea. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 See The RCB3 command Reference Manual for details}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Serial Servo Port configuration}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Scenario Port used:}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetSerialServoPortUsage}(UINT in_rcb3,UINT in_portsUsed,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetSerialServoPortUsage}(UINT in_rcb3,UINT &out_portsUsed);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetSerialServoConfiguration}(UINT in_rcb3,UINT in_portNumber,UBYTE in_backup,}{\cf3 const}{\cf0  UBYTE *in_stretch}{\cf4 /*3*/}{\cf0 ,}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\rtlch \ltrch\loch\cf0                                            }}{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 const}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  UBYTE *in_speed}{\cf4 /*3*/}{\cf0 ,UINT in_pulsePunch,UINT in_deadBand,}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_damping,UINT in_protectionTime, UINT in_reverse, }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_lowerPositionLimit,UINT in_upperPositionLimit,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_freeTime,UINT in_stretchSIO,UINT in_speedSIO,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_offset,UINT in_ID, UINT in_p1,UINT in_p2, UINT in_n1, UINT in_n2);}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetSerialServoConfiguration}(UINT in_rcb3,UINT in_portNumber,UBYTE &out_backup,UBYTE *out_stretch}{\cf4 /*3*/}{\cf0 ,}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{{\cf0{\rtlch \ltrch\loch                                            }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UBYTE *out_speed}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf4 /*3*/}{\cf0 ,UINT &out_pulsePunch,UINT &out_deadBand,}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_damping,UINT &out_protectionTime, UINT &out_reverse, }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_lowerPositionLimit,UINT &out_upperPositionLimit,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_freeTime,UINT &out_stretchSIO,UINT &out_speedSIO,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                            }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_offset,UINT &out_ID, UINT &out_p1,UINT &out_p2, UINT &out_n1, UINT &out_n2);}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Configuration of the Serial Servos.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Don't ask me, I have no idea. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 See The RCB3 command Reference Manual for details}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetSerialServoStretch}(UINT in_rcb3,UINT *out_stretch}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetSerialServoSpeed}(UINT in_rcb3,UINT *out_speed}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Don't ask me, I have no idea. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 See The RCB3 command Reference Manual for details}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //PDS Servo Port configuration}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPDSConfiguration}(UINT in_rcb3,UINT in_portNumber,UBYTE in_backup,UINT in_stretch,}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_speed,UINT in_pulsePunch,UINT in_deadBand,UINT in_damping,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_failSafeTime,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_lowerPositionLimit,UINT in_upperPositionLimit}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 );}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPDSConfiguration}(UINT in_rcb3,UINT in_portNumber,UBYTE &out_backup,UINT &out_stretch,}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_speed,UINT &out_pulsePunch,UINT &out_deadBand,UINT &out_damping,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_failSafeTime,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_lowerPositionLimit,UINT &out_upperPositionLimit}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                    }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 );}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Configuration of the PDS Servos.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Don't ask me, I have no idea. }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 See The RCB3 command Reference Manual for details}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPDSPortsInUse}(UINT in_rcb3,UINT in_pdsPortsInUse,UINT in_option);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPDSPortsInUse}(UINT in_rcb3,UINT &out_pdsPortsInUse);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Set or Get which port is in PDS Mode.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Default Port Position}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortsDefaultPosition}(UINT in_rcb3,}{\cf3 const}{\cf0  UINT *in_defaultPositions}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPortsDefaultPosition}(UINT in_rcb3,UINT *out_defaultPositions}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Should be self explanatory.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Port Names}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetPortName}(UINT in_rcb3,UINT in_option,UINT in_portIndex,}{\cf3 const}{\cf0  }{\cf3 char}{\cf0  *in_name);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetPortName}(UINT in_rcb3,UINT in_portIndex,}{\cf3 char}{\cf0  *out_name }{\cf4 /*32*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 It seems you can give nicknames to you ports, Not sure how that would be useful. Anyway here is it.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Motion/Scenario Edition}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b SetMotionScenarioData}(UINT in_rcb3,UINT in_option,UINT in_motionScenarioIndex,UINT in_moveCount,UINT in_portsUsed, }}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                       }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_minute,UINT in_hour,UINT in_day,UINT in_month,}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{{\cf0{\rtlch \ltrch\loch                                       }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT in_button,}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf3 const}{\cf0  }{\cf3 char}{\cf0  *in_name }{\cf4 /*32 max*/}{\cf0 );}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetMotionScenarioData}(UINT in_rcb3,UINT in_motionScenarioIndex,}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch                                       }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_moveCount,}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                       }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_portsUsed, }
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch                                       }{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_minute,UINT &out_hour,UINT &out_day,UINT &out_month,}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{{\cf0{\rtlch \ltrch\loch                                       }}}{\cf0{{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 UINT &out_button,}}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\lang255{\cf3 char}{\cf0  *out_name }{\cf4 /*32 max*/}{\cf0 );}}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Set/Get the configuration for a Scenario. You must at least set the index you want to describe and the number of moves in the motiom/scenario.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 I am not sure that the portsUsed are important for the scenario.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The time information, like the name can be set to anything it does not influence the motion/scenario.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The button information is the value that  describes which button on the remoteControl should be pressed to start that motion/scenario.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 //Timer based Notification (0.5s) when activated in the Software Switches.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetLastDataFromRemoteControl}(UINT in_rcb3,}{\cf3 char}{\cf0  *out_remoteData }{\cf4 /*7*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Return the last data send by the RemoteControl.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0{\cf0  {\b GetLastPortsStatus}(UINT in_rcb3,UINT &out_portsDone,UINT *out_portMotionDone}{\cf4 /*24*/}{\cf0 );}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Retreive the status of each port and the motion executed. A port set to 1 indicates that the motion has been completed.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0\lang255{\cf0  {\b GetLastPowerAndADValues}(UINT in_rcb3,}{\cf3 float}{\cf0  &out_power,}{\cf3 float}{\cf0  &out_ad1,}{\cf3 float}{\cf0  &out_ad2,}{\cf3 float}{\cf0  &out_ad3);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Returns the values in V for the 3 AD channels and the power supply from the latest notification.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf4\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang1024\loch\fs20\lang1024 {\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0 /////////////////////////}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 {\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0 //Files  Extension}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 {\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0 /////////////////////////}
\par \pard\plain \ltrpar\s1\cf4\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255{\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0\lang1024\fs20{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0\lang1024\fs20{\cf0  {\b LoadMotionFile}(UINT in_rcb3,}{\cf3 const}{\cf0  }{\cf3 char}{\cf0  *in_motion_filename,UINT in_motion_index,UINT in_force_overwrite);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 {\*\bkmkstart DDE_LINK2}Reads a motion file and store in the specified slot. You are responsible for checking that the previous slot is not using that space. Please pass 1 to in_force_overwrite if you want to write in the slot even if it is already used.}
\par \pard\plain \ltrpar\s1\cf3\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 {\*\bkmkend DDE_LINK2}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024{\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0{\cf0  {\b LoadScenarioFile}(UINT in_rcb3,}{\cf3 const}{\cf0  }{\cf3 char}{\cf0  *in_scenario_filename,UINT in_scenario_index,UINT in_force_overwrite);}}
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Reads a scenari  file and store in the specified slot.  Please pass 1 to in_force_overwrite if you want to write in the slot even if it is already used.}
\par \pard\plain \ltrpar\s1\cf3\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs20\lang1024\loch\f0\fs20\lang1024{\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0{\cf3 bool}}{\rtlch \ltrch\loch\f0\fs20\lang1024\i0\b0{\cf0  {\b LoadHomePositionFile}(UINT in_rcb3,}{\cf3 const}{\cf0  }{\cf3 char}{\cf0  *in_homeposition_filename,UINT in_scenario_index,UINT in_force_overwrite);}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf0\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Set the home position from a home position file created by H2H.}
\par \pard\plain \ltrpar\s1\cf3\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang1024\loch\fs20\lang1024 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af6\afs20\lang255\ab\ltrch\dbch\af6\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Warnings}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 The commands that store permanently information on the RCB boards do so by means of recording information on an EEPROM.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 This EEPROM can be written many times but not infinite times. The number of times the EEPROM can be writen is about one million times so for most purposes it is not a limit. However when working with programs that can potentially write on the EEPROM severa
l thousand times per second, that limit may be a problem. The library allows you to perform many writes in a short period of time so be careful to not entering long loops when using permanent writing functions. }
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af7\afs20\lang255\ab\ltrch\dbch\af5\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Final Note:}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ltrch\dbch\af5\langfe255\hich\fs20\lang255\loch\fs20\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 For the moment, the source will remain in closed source. I might consider opening them later.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 A Linux version might also see the light in the near future but I won't maintain it.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 If you are interested in porting it to other systems then please contact me, I am sure we can arrange something.}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 HAVE FUN!}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs20\lang255\ab\ltrch\dbch\af5\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Thanks to:}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ab\ltrch\dbch\af6\langfe255\hich\fs20\lang255\b\loch\fs20\lang255\b {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Kondo{\b0  for putting online the RCB3 Command Reference Manual}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b Inaki Castillo {\b0 for his RCB1 interface (I have C&P some of his text too)}}
\par \pard\plain \ltrpar\s1\cf1\ql\rtlch\af6\afs20\lang255\ltrch\dbch\af6\langfe255\hich\fs20\lang255\loch\fs20\lang255{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b{\b Lem}}{\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0  From {\field{\*\fldinst HYPERLINK "http://www.robots-dreams.com/" }{\fldrslt \*\cs4\cf2\ul\ulc0\rtlch\ltrch\dbch\hich\f0\fs24\lang255\loch\f0\fs24\lang255 http://www.robots-dreams.com}}}
\par \pard\plain \ltrpar\s1\cf1\aspalpha\ql\rtlch\af7\afs24\lang255\ltrch\dbch\af5\langfe255\hich\f0\fs24\lang255\loch\f0\fs24\lang255 {\rtlch \ltrch\loch\f0\fs20\lang255\i0\b0 Edmen (from {\field{\*\fldinst HYPERLINK "http://robosavvy.com/" }{\fldrslt \*\cs4\cf2\ul\ulc0\rtlch\ltrch\dbch\hich\f0\fs24\lang255\loch\f0\fs24\lang255 http://robosavvy.com}} Forum ) for the beta testing. }
\par }